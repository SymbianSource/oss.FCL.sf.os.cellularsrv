//
// Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//
// TE_Etel.script
//
//
//

LOAD_SUITE TE_Etel

//!@file

START_TESTCASE TEL-ETEL-NA-0001
//!@SYMTestCaseID TEL-ETEL-NA-0001
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test loading of a comms module
//!@SYMTestPriority High
//!@SYMTestActions Loads a comms module
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestEtelLoadDrv

END_TESTCASE TEL-ETEL-NA-0001

START_TESTCASE TEL-ETEL-NA-0002
//!@SYMTestCaseID TEL-ETEL-NA-0002
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test of platform security delegation
//!@SYMTestPriority High
//!@SYMTestActions Calls a series of IPCs on DSTD TSY, and then it calls an IPC 
//!                on DSTDNC TSY while DSTD TSY is still loaded
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestPlatSecDelegation

END_TESTCASE TEL-ETEL-NA-0002

START_TESTCASE TEL-ETEL-NA-0003
//!@SYMTestCaseID TEL-ETEL-NA-0003
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test of multi-thread server open calls
//!@SYMTestPriority High
//!@SYMTestActions Two threads attempts to connect to ETel server simultaneously
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestMultiThreadServerOpen

END_TESTCASE TEL-ETEL-NA-0003

START_TESTCASE TEL-ETEL-NA-0004
//!@SYMTestCaseID TEL-ETEL-NA-0004
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test of multiple completion on same call
//!@SYMTestPriority High
//!@SYMTestActions Opens a call, then opens the same call from two different 
//!                instances of RCall, and then it attempts to perform  multiple 
//!                completion on the call
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestMultiCompletion

END_TESTCASE TEL-ETEL-NA-0004

START_TESTCASE TEL-ETEL-NA-0005
//!@SYMTestCaseID TEL-ETEL-NA-0005
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test of multiple completions on different calls
//!@SYMTestPriority High
//!@SYMTestActions Opens two different calls, and then it attempts to perform  
//!                multiple completion on that calls
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestMultiCompletionDif

END_TESTCASE TEL-ETEL-NA-0005

START_TESTCASE TEL-ETEL-NA-0006
//!@SYMTestCaseID TEL-ETEL-NA-0006
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test of request mode virtual function
//!@SYMTestPriority High
//!@SYMTestActions Calls ReqMode finction in Server
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestReqMode

END_TESTCASE TEL-ETEL-NA-0006

START_TESTCASE TEL-ETEL-NA-0007
//!@SYMTestCaseID TEL-ETEL-NA-0007
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test of relinquish ownership
//!@SYMTestPriority High
//!@SYMTestActions Tests relinquish ownership
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestRelinquish

END_TESTCASE TEL-ETEL-NA-0007

START_TESTCASE TEL-ETEL-NA-0008
//!@SYMTestCaseID TEL-ETEL-NA-0008
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test call recover port and relinquish ownership
//!@SYMTestPriority High
//!@SYMTestActions Recovers call port and relinquishes ownership
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestRelinquishOwner

END_TESTCASE TEL-ETEL-NA-0008

START_TESTCASE TEL-ETEL-NA-0009
//!@SYMTestCaseID TEL-ETEL-NA-0009
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test of call relinquish, this test is used to check the 
//!                 objects of CCallBase, CLineBase, CPhoneBase and 
//!                 CPhoneFactoryBase are destroy in the right order
//!@SYMTestPriority High
//!@SYMTestActions Relinquishes call
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestRelinquishCase1

END_TESTCASE TEL-ETEL-NA-0009

START_TESTCASE TEL-ETEL-NA-0010
//!@SYMTestCaseID TEL-ETEL-NA-0010
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test set and get functions
//!@SYMTestPriority High
//!@SYMTestActions Calls all set and get functions from RPhone class
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestMemberFnSetGet

END_TESTCASE TEL-ETEL-NA-0010

START_TESTCASE TEL-ETEL-NA-0011
//!@SYMTestCaseID TEL-ETEL-NA-0011
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test phone device member functions
//!@SYMTestPriority High
//!@SYMTestActions Calls phone device member functions like: GetLineInfo, 
//!                EnumerateLines, GetStatus
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestPhoneMemberFn

END_TESTCASE TEL-ETEL-NA-0011

START_TESTCASE TEL-ETEL-NA-0012
//!@SYMTestCaseID TEL-ETEL-NA-0012
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test line member functions
//!@SYMTestPriority High
//!@SYMTestActions Calls line device member functions like: GetLineInfo, 
//!                EnumerateLines, GetStatus, GetHookStatus
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestLineMemberFn

END_TESTCASE TEL-ETEL-NA-0012

START_TESTCASE TEL-ETEL-NA-0013
//!@SYMTestCaseID TEL-ETEL-NA-0013
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test call member munctions
//!@SYMTestPriority High
//!@SYMTestActions Calls call device member functions
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestCallMemberFn

END_TESTCASE TEL-ETEL-NA-0013

START_TESTCASE TEL-ETEL-NA-0014
//!@SYMTestCaseID TEL-ETEL-NA-0014
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test fax member functions
//!@SYMTestPriority High
//!@SYMTestActions Calls fax device member functions
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestFaxMemberFn

END_TESTCASE TEL-ETEL-NA-0014

START_TESTCASE TEL-ETEL-NA-0015
//!@SYMTestCaseID TEL-ETEL-NA-0015
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test cancel service
//!@SYMTestPriority High
//!@SYMTestActions Calls RPhone::NotifyModemDetectedCancel and 
//!                RLine::NotifyIncomingCallCancel functions
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestCancelService1

END_TESTCASE TEL-ETEL-NA-0015

START_TESTCASE TEL-ETEL-NA-0016
//!@SYMTestCaseID TEL-ETEL-NA-0016
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test cancel service
//!@SYMTestPriority High
//!@SYMTestActions Creates two instances of RPhone class and then call 
//!                NotifyModemDetectedCancel on both of them
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestCancelService2

END_TESTCASE TEL-ETEL-NA-0016

START_TESTCASE TEL-ETEL-NA-0017
//!@SYMTestCaseID TEL-ETEL-NA-0017
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test cancel service
//!@SYMTestPriority High
//!@SYMTestActions Calls RPhone::NotifyModemDetectedCancel and 
//!                RCall::NotifyIncomingCallCancel functions
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestCancelService3

END_TESTCASE TEL-ETEL-NA-0017

START_TESTCASE TEL-ETEL-NA-0018
//!@SYMTestCaseID TEL-ETEL-NA-0018
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test cancel service
//!@SYMTestPriority High
//!@SYMTestActions Creates two RPhone instances and call 
//!                NotifyModemDetectedCancel on them
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestCancelService4

END_TESTCASE TEL-ETEL-NA-0018

START_TESTCASE TEL-ETEL-NA-0019
//!@SYMTestCaseID TEL-ETEL-NA-0019
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test cancel service
//!@SYMTestPriority High
//!@SYMTestActions Tests NotifyModemDetectedCancel function call
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestCancelService6

END_TESTCASE TEL-ETEL-NA-0019

START_TESTCASE TEL-ETEL-NA-0020
//!@SYMTestCaseID TEL-ETEL-NA-0020
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test cancel service
//!@SYMTestPriority High
//!@SYMTestActions Tests cancel request for fax device
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestCancelService7

END_TESTCASE TEL-ETEL-NA-0020

START_TESTCASE TEL-ETEL-NA-0021
//!@SYMTestCaseID TEL-ETEL-NA-0021
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test data port
//!@SYMTestPriority High
//!@SYMTestActions Calls LoanDataPort and RecoverDataPort - tests normal 
//!                behaviour
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestDataPort1

END_TESTCASE TEL-ETEL-NA-0021

START_TESTCASE TEL-ETEL-NA-0022
//!@SYMTestCaseID TEL-ETEL-NA-0022
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test data port
//!@SYMTestPriority High
//!@SYMTestActions Tests bad behaviour - loan and close
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestDataPort2

END_TESTCASE TEL-ETEL-NA-0022

START_TESTCASE TEL-ETEL-NA-0023
//!@SYMTestCaseID TEL-ETEL-NA-0023
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test data port
//!@SYMTestPriority High
//!@SYMTestActions Creates two RPhone instances and calls LoanDataPort on both 
//!                of them
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestDataPort4

END_TESTCASE TEL-ETEL-NA-0023

START_TESTCASE TEL-ETEL-NA-0024
//!@SYMTestCaseID TEL-ETEL-NA-0024
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test N.C terminate fax session
//!@SYMTestPriority High
//!@SYMTestActions Terminates fax session after reading a fax
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestNcTermFaxSess

END_TESTCASE TEL-ETEL-NA-0024

START_TESTCASE TEL-ETEL-NA-0025
//!@SYMTestCaseID TEL-ETEL-NA-0025
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test terminate fax session
//!@SYMTestPriority High
//!@SYMTestActions Terminates fax session after reading a fax - normal behaviour
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestTermFaxSess1

END_TESTCASE TEL-ETEL-NA-0025

START_TESTCASE TEL-ETEL-NA-0026
//!@SYMTestCaseID TEL-ETEL-NA-0026
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test terminate fax session
//!@SYMTestPriority High
//!@SYMTestActions Terminates fax session after reading a fax
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestTermFaxSess2

END_TESTCASE TEL-ETEL-NA-0026

START_TESTCASE TEL-ETEL-NA-0027
//!@SYMTestCaseID TEL-ETEL-NA-0027
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc 
//!@SYMTestPriority High
//!@SYMTestActions 
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestNcCancelLineCall

END_TESTCASE TEL-ETEL-NA-0027

START_TESTCASE TEL-ETEL-NA-0028
//!@SYMTestCaseID TEL-ETEL-NA-0028
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test cancel without any request
//!@SYMTestPriority High
//!@SYMTestActions Cancel request without any previous request
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestCancelNoReq

END_TESTCASE TEL-ETEL-NA-0028

START_TESTCASE TEL-ETEL-NA-0029
//!@SYMTestCaseID TEL-ETEL-NA-0029
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test cancel phone for DSTDNC module
//!@SYMTestPriority High
//!@SYMTestActions Cancels a phone request
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestNcCancelPhone

END_TESTCASE TEL-ETEL-NA-0029

START_TESTCASE TEL-ETEL-NA-0030
//!@SYMTestCaseID TEL-ETEL-NA-0030
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that loads telephony server session twice
//!@SYMTestPriority High
//!@SYMTestActions Attempts to load telephony server session twice, then uload 
//!                the sessions
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestLoadTwice

END_TESTCASE TEL-ETEL-NA-0030

START_TESTCASE TEL-ETEL-NA-0031
//!@SYMTestCaseID TEL-ETEL-NA-0031
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that cancel writing fax
//!@SYMTestPriority High
//!@SYMTestActions Cancels a fax request
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestNcCancelWrFax

END_TESTCASE TEL-ETEL-NA-0031

START_TESTCASE TEL-ETEL-NA-0032
//!@SYMTestCaseID TEL-ETEL-NA-0032
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test getting of Nc caps
//!@SYMTestPriority High
//!@SYMTestActions Gets Nc caps
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestGetNcFns

END_TESTCASE TEL-ETEL-NA-0032

START_TESTCASE TEL-ETEL-NA-0033
//!@SYMTestCaseID TEL-ETEL-NA-0033
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test Call Owner
//!@SYMTestPriority High
//!@SYMTestActions Tests error case: non owner client attempts to modify the 
//!                call status
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestCallOwner1

END_TESTCASE TEL-ETEL-NA-0033

START_TESTCASE TEL-ETEL-NA-0034
//!@SYMTestCaseID TEL-ETEL-NA-0034
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test Call Owner
//!@SYMTestPriority High
//!@SYMTestActions Test situation: The TSY does not allow more than one client 
//!                to attempt to acquire ownership of a call. KErrInUse is 
//!                returned
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestCallOwner2

END_TESTCASE TEL-ETEL-NA-0034

START_TESTCASE TEL-ETEL-NA-0035
//!@SYMTestCaseID TEL-ETEL-NA-0035
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test call owner client panic
//!@SYMTestPriority High
//!@SYMTestActions Panics call owner client 
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestCallOwnerCliPanicA

END_TESTCASE TEL-ETEL-NA-0035

START_TESTCASE TEL-ETEL-NA-0036
//!@SYMTestCaseID TEL-ETEL-NA-0036
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open phone from server
//!@SYMTestPriority High
//!@SYMTestActions Opens phone from server
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenPhoneFrServ

END_TESTCASE TEL-ETEL-NA-0036

START_TESTCASE TEL-ETEL-NA-0037
//!@SYMTestCaseID TEL-ETEL-NA-0037
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open line from server
//!@SYMTestPriority High
//!@SYMTestActions Opens line from server
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenLineFrServ

END_TESTCASE TEL-ETEL-NA-0037

START_TESTCASE TEL-ETEL-NA-0038
//!@SYMTestCaseID TEL-ETEL-NA-0038
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open call from server
//!@SYMTestPriority High
//!@SYMTestActions Opens call from server
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenCallFrServ

END_TESTCASE TEL-ETEL-NA-0038

START_TESTCASE TEL-ETEL-NA-0039
//!@SYMTestCaseID TEL-ETEL-NA-0039
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open call from RPhone
//!@SYMTestPriority High
//!@SYMTestActions Opens call from RPhone
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenCallFrPhone

END_TESTCASE TEL-ETEL-NA-0039

START_TESTCASE TEL-ETEL-NA-0040
//!@SYMTestCaseID TEL-ETEL-NA-0040
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open line from RPhone
//!@SYMTestPriority High
//!@SYMTestActions Opens line from RPhone
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenLineFrPhone

END_TESTCASE TEL-ETEL-NA-0040

START_TESTCASE TEL-ETEL-NA-0041
//!@SYMTestCaseID TEL-ETEL-NA-0041
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open call from RLine
//!@SYMTestPriority High
//!@SYMTestActions Opens call from RLine
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenCallFrLine

END_TESTCASE TEL-ETEL-NA-0041

START_TESTCASE TEL-ETEL-NA-0042
//!@SYMTestCaseID TEL-ETEL-NA-0042
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open fax from RCall
//!@SYMTestPriority High
//!@SYMTestActions Opens fax from RCall
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenFaxFrCall

END_TESTCASE TEL-ETEL-NA-0042

START_TESTCASE TEL-ETEL-NA-0043
//!@SYMTestCaseID TEL-ETEL-NA-0043
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that get phone info
//!@SYMTestPriority High
//!@SYMTestActions Gets phone info for several phones
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestPhoneInfo

END_TESTCASE TEL-ETEL-NA-0043

START_TESTCASE TEL-ETEL-NA-0044
//!@SYMTestCaseID TEL-ETEL-NA-0044
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test set by des
//!@SYMTestPriority High
//!@SYMTestActions Tests set by des
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestSetDes

END_TESTCASE TEL-ETEL-NA-0044

START_TESTCASE TEL-ETEL-NA-0045
//!@SYMTestCaseID TEL-ETEL-NA-0045
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that load phone modules
//!@SYMTestPriority High
//!@SYMTestActions Loads and unloads two phone modules - correct order
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestLoadModule1

END_TESTCASE TEL-ETEL-NA-0045

START_TESTCASE TEL-ETEL-NA-0046
//!@SYMTestCaseID TEL-ETEL-NA-0046
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that load phone modules
//!@SYMTestPriority High
//!@SYMTestActions Load two modules and unloads them in wrong order
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestLoadModule2

END_TESTCASE TEL-ETEL-NA-0046

START_TESTCASE TEL-ETEL-NA-0047
//!@SYMTestCaseID TEL-ETEL-NA-0047
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that load phone modules
//!@SYMTestPriority High
//!@SYMTestActions Loads two phone modules, gets status on several different 
//!                RCall instances, and unloads phone modules
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestLoadModule3

END_TESTCASE TEL-ETEL-NA-0047

START_TESTCASE TEL-ETEL-NA-0048
//!@SYMTestCaseID TEL-ETEL-NA-0048
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test flow control
//!@SYMTestPriority High
//!@SYMTestActions Tests flow control - simple case
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestFlowControl1

END_TESTCASE TEL-ETEL-NA-0048

START_TESTCASE TEL-ETEL-NA-0049
//!@SYMTestCaseID TEL-ETEL-NA-0049
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test flow control
//!@SYMTestPriority High
//!@SYMTestActions This test suspended flow control and setup TCall back 
//!                function which expired later on. In the mean time send 
//!                another command phone.Caps - this command should not reach. 
//!                The Tsy until the Timer expired which resume flow control
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestFlowControl2

END_TESTCASE TEL-ETEL-NA-0049

START_TESTCASE TEL-ETEL-NA-0050
//!@SYMTestCaseID TEL-ETEL-NA-0050
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test flow control
//!@SYMTestPriority High
//!@SYMTestActions This test Open a phone Tsy do an Up call FlowControlSuspend()
//!                while initialising new phone Tew Asynch requests arrived to 
//!                the server. These reqs should be buffered by server. 
//!                Once phone initalised it will do another up call 
//!                FlowControlResume() the server will look in the waiting queue
//!                for any outstanding req and resume normal service
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestFlowControl3

END_TESTCASE TEL-ETEL-NA-0050

START_TESTCASE TEL-ETEL-NA-0051
//!@SYMTestCaseID TEL-ETEL-NA-0051
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test flow control
//!@SYMTestPriority High
//!@SYMTestActions Test phone in parallel mode. All request will be pass to TSY 
//!                without buffering
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestFlowControl4

END_TESTCASE TEL-ETEL-NA-0051

START_TESTCASE TEL-ETEL-NA-0052
//!@SYMTestCaseID TEL-ETEL-NA-0052
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test flow control
//!@SYMTestPriority High
//!@SYMTestActions A Message to Tsy to suspend flow control and resume on 
//!                completion another req for notification
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestFlowControl5

END_TESTCASE TEL-ETEL-NA-0052

START_TESTCASE TEL-ETEL-NA-0053
//!@SYMTestCaseID TEL-ETEL-NA-0053
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test flow control
//!@SYMTestPriority High
//!@SYMTestActions Check a request with request mode multiple comnpletion 
//!                disabled And Not obeyed flow control: LinInfo on phoneFc does
//!                this
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestFlowControl6

END_TESTCASE TEL-ETEL-NA-0053

START_TESTCASE TEL-ETEL-NA-0054
//!@SYMTestCaseID TEL-ETEL-NA-0054
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open call from RPhone
//!@SYMTestPriority High
//!@SYMTestActions Opens call from RPhone
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenCallFrPhone

END_TESTCASE TEL-ETEL-NA-0054

START_TESTCASE TEL-ETEL-NA-0055
//!@SYMTestCaseID TEL-ETEL-NA-0055
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open call from Server
//!@SYMTestPriority High
//!@SYMTestActions Opens call from Server
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenCallFrServ

END_TESTCASE TEL-ETEL-NA-0055

START_TESTCASE TEL-ETEL-NA-0056
//!@SYMTestCaseID TEL-ETEL-NA-0056
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open call from RLine
//!@SYMTestPriority High
//!@SYMTestActions Opens call from RLine
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenCallFrLine

END_TESTCASE TEL-ETEL-NA-0056

START_TESTCASE TEL-ETEL-NA-0057
//!@SYMTestCaseID TEL-ETEL-NA-0057
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open Phone Fc
//!@SYMTestPriority High
//!@SYMTestActions Opens phone Fc
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenPhoneFc

END_TESTCASE TEL-ETEL-NA-0057

START_TESTCASE TEL-ETEL-NA-0058
//!@SYMTestCaseID TEL-ETEL-NA-0058
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open all sub sessions in Fc
//!@SYMTestPriority High
//!@SYMTestActions Opens all sub sessions in Fc
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenAllSubSessInFc

END_TESTCASE TEL-ETEL-NA-0058

START_TESTCASE TEL-ETEL-NA-0059
//!@SYMTestCaseID TEL-ETEL-NA-0059
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test open all sub sessions
//!@SYMTestPriority High
//!@SYMTestActions Opens all sub sessions
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenAllSubSess

END_TESTCASE TEL-ETEL-NA-0059

START_TESTCASE TEL-ETEL-NA-0060
//!@SYMTestCaseID TEL-ETEL-NA-0060
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test server open close
//!@SYMTestPriority High
//!@SYMTestActions Tests server ability to load and unload phone module
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestServerOpenClose

END_TESTCASE TEL-ETEL-NA-0060

START_TESTCASE TEL-ETEL-NA-0061
//!@SYMTestCaseID TEL-ETEL-NA-0061
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test unload
//!@SYMTestPriority High
//!@SYMTestActions Unloads phone module
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestUnload

END_TESTCASE TEL-ETEL-NA-0061

START_TESTCASE TEL-ETEL-NA-0062
//!@SYMTestCaseID TEL-ETEL-NA-0062
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that opens more sub sessions
//!@SYMTestPriority High
//!@SYMTestActions Opens more sub sessions
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenMoreSubSess

END_TESTCASE TEL-ETEL-NA-0062

START_TESTCASE TEL-ETEL-NA-0063
//!@SYMTestCaseID TEL-ETEL-NA-0063
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that notify a request
//!@SYMTestPriority High
//!@SYMTestActions Notifies a request
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestNotify

END_TESTCASE TEL-ETEL-NA-0063

START_TESTCASE TEL-ETEL-NA-0064
//!@SYMTestCaseID TEL-ETEL-NA-0064
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that notify 2 clients for the same request
//!@SYMTestPriority High
//!@SYMTestActions Notifies 2 clients for the same request
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestNotify2Client

END_TESTCASE TEL-ETEL-NA-0064

START_TESTCASE TEL-ETEL-NA-0065
//!@SYMTestCaseID TEL-ETEL-NA-0065
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test bad client case 1: Close more than once 
//!@SYMTestPriority High
//!@SYMTestActions Closes call more than once 
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestBadClient1

END_TESTCASE TEL-ETEL-NA-0065

START_TESTCASE TEL-ETEL-NA-0066
//!@SYMTestCaseID TEL-ETEL-NA-0066
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test bad client case 1a : Close more than once
//!@SYMTestPriority High
//!@SYMTestActions Closes call and fax more than once
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestBadClient1a

END_TESTCASE TEL-ETEL-NA-0066

START_TESTCASE TEL-ETEL-NA-0067
//!@SYMTestCaseID TEL-ETEL-NA-0067
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test bad client case 1b
//!@SYMTestPriority High
//!@SYMTestActions Opens a call on a phone that has a timer for initialisation 
//!                so it set FlowControlSuspend() but a client decided to close 
//!                the server
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestBadClient1b

END_TESTCASE TEL-ETEL-NA-0067

START_TESTCASE TEL-ETEL-NA-0095
//!@SYMTestCaseID TEL-ETEL-NA-0095
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test bad client case 2: Close server without unload tsy 
//!@SYMTestPriority High
//!@SYMTestActions Closes server without unload tsy 
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestBadClient2
END_TESTCASE TEL-ETEL-NA-0095

START_TESTCASE TEL-ETEL-NA-0068
//!@SYMTestCaseID TEL-ETEL-NA-0068
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test bad client case 2a: Close server without unloading two 
//!                 TSY's
//!@SYMTestPriority High
//!@SYMTestActions Closes server without unloading two TSY's
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestBadClient2a

END_TESTCASE TEL-ETEL-NA-0068

START_TESTCASE TEL-ETEL-NA-0069
//!@SYMTestCaseID TEL-ETEL-NA-0069
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test Bad Client Case 3: same as test case 1 
//!@SYMTestPriority High
//!@SYMTestActions Open a Call on this phone that has a timer for initialisation
//!                so it set FlowControlSuspend() a client then send a 
//!                asynchronous req and close server. Before the req completed 
//!                nor the initialisation completed
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestBadClient3

END_TESTCASE TEL-ETEL-NA-0069

START_TESTCASE TEL-ETEL-NA-0070
//!@SYMTestCaseID TEL-ETEL-NA-0070
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test bad client case 3a
//!@SYMTestPriority High
//!@SYMTestActions 2 Requests are sent - 1st send flow control suspend and set 
//!                timer to expired later second req coming this is buffered 
//!                in 'wait' list. Client decided to close every thing - server
//!                should clean up
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestBadClient3a

END_TESTCASE TEL-ETEL-NA-0070

START_TESTCASE TEL-ETEL-NA-0071
//!@SYMTestCaseID TEL-ETEL-NA-0071
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test bad client case 4 : Open twice
//!@SYMTestPriority High
//!@SYMTestActions Opens twice
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestBadClient4

END_TESTCASE TEL-ETEL-NA-0071

START_TESTCASE TEL-ETEL-NA-0072
//!@SYMTestCaseID TEL-ETEL-NA-0072
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test bad client case 5
//!@SYMTestPriority High
//!@SYMTestActions Instances of SubSession should be valid even
//!                client unload the TSY module
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestBadClient5

END_TESTCASE TEL-ETEL-NA-0072

START_TESTCASE TEL-ETEL-NA-0073
//!@SYMTestCaseID TEL-ETEL-NA-0073
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc TestBadClientCase 6: Close server before open
//!@SYMTestPriority High
//!@SYMTestActions Closes server before open
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestBadClient6

END_TESTCASE TEL-ETEL-NA-0073

START_TESTCASE TEL-ETEL-NA-0074
//!@SYMTestCaseID TEL-ETEL-NA-0074
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test bad client case 8
//!@SYMTestPriority High
//!@SYMTestActions Opens phone twice with the same name
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestBadClient8

END_TESTCASE TEL-ETEL-NA-0074

START_TESTCASE TEL-ETEL-NA-0075
//!@SYMTestCaseID TEL-ETEL-NA-0075
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test duplicate phone name case 1
//!@SYMTestPriority High
//!@SYMTestActions Duplicates phone name with throu' tsy module if already 
//!                loaded tsy with the same name
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestDuplicatePhoneName

END_TESTCASE TEL-ETEL-NA-0075

START_TESTCASE TEL-ETEL-NA-0076
//!@SYMTestCaseID TEL-ETEL-NA-0076
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open call without name
//!@SYMTestPriority High
//!@SYMTestActions Opens call without name
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenCallNoName

END_TESTCASE TEL-ETEL-NA-0076

START_TESTCASE TEL-ETEL-NA-0077
//!@SYMTestCaseID TEL-ETEL-NA-0077
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test Etel version
//!@SYMTestPriority High
//!@SYMTestActions Gets Etel version
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestVersion

END_TESTCASE TEL-ETEL-NA-0077

START_TESTCASE TEL-ETEL-NA-0078
//!@SYMTestCaseID TEL-ETEL-NA-0078
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that load Tsys with same phone names
//!@SYMTestPriority High
//!@SYMTestActions Loads Tsys with same phone names
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestLoadTsySamePhoneName

END_TESTCASE TEL-ETEL-NA-0078

START_TESTCASE TEL-ETEL-NA-0079
//!@SYMTestCaseID TEL-ETEL-NA-0079
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test that open phones with same phone names
//!@SYMTestPriority High
//!@SYMTestActions Opens phones with same phone names
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenPhoneSamePhoneName

END_TESTCASE TEL-ETEL-NA-0079

START_TESTCASE TEL-ETEL-NA-0080
//!@SYMTestCaseID TEL-ETEL-NA-0080
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test loading phone module with 2 identical phone names
//!@SYMTestPriority High
//!@SYMTestActions Loading phone module with 2 identical phone names
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenPhoneModeIdentPhoneName

END_TESTCASE TEL-ETEL-NA-0080

START_TESTCASE TEL-ETEL-NA-0081
//!@SYMTestCaseID TEL-ETEL-NA-0081
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test a TSY that allocates call objects from a static pool
//!@SYMTestPriority High
//!@SYMTestActions Allocates call objects from a static pool
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestStaticCallPoolTsy

END_TESTCASE TEL-ETEL-NA-0081

START_TESTCASE TEL-ETEL-NA-0083
//!@SYMTestCaseID TEL-ETEL-NA-0083
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test server open memory failure
//!@SYMTestPriority High
//!@SYMTestActions Loads an ETel TSY module in a loop and simulates 
//!                "open memory" failure
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestOpenMemFail

END_TESTCASE TEL-ETEL-NA-0083

START_TESTCASE TEL-ETEL-NA-0084
//!@SYMTestCaseID TEL-ETEL-NA-0084
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test connecting to RTel server under OOM
//!@SYMTestPriority High
//!@SYMTestActions Connects the client to the ETel Server in the OOM situation
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestLowMem

END_TESTCASE TEL-ETEL-NA-0084

START_TESTCASE TEL-ETEL-NA-0085
//!@SYMTestCaseID TEL-ETEL-NA-0085
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test low memory phone creation with heap check
//!@SYMTestPriority High
//!@SYMTestActions Opens a phone subsession by name, and starts the modem 
//!                initialisation process, and checks heap  
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestLowMemPhoneHCheck

END_TESTCASE TEL-ETEL-NA-0085

START_TESTCASE TEL-ETEL-NA-0086
//!@SYMTestCaseID TEL-ETEL-NA-0086
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test low memory function failure
//!@SYMTestPriority High
//!@SYMTestActions Gets information about the status of the phone in a loop
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestLowMemFnFail

END_TESTCASE TEL-ETEL-NA-0086

START_TESTCASE TEL-ETEL-NA-0087
//!@SYMTestCaseID TEL-ETEL-NA-0087
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test call relinquish
//!@SYMTestPriority High
//!@SYMTestActions Attempts to establish a connection using the telephone number
//!                specified
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestMemRelinquish

END_TESTCASE TEL-ETEL-NA-0087

START_TESTCASE TEL-ETEL-NA-0088
//!@SYMTestCaseID TEL-ETEL-NA-0088
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test bad client case
//!@SYMTestPriority High
//!@SYMTestActions Closes server without closing its subsession
//!@SYMTestExpectedResults The test should panic
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestMemBadClient7

END_TESTCASE TEL-ETEL-NA-0088

START_TESTCASE TEL-ETEL-NA-0089
//!@SYMTestCaseID TEL-ETEL-NA-0089
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test bad client case
//!@SYMTestPriority High
//!@SYMTestActions Open subsessions few times
//!@SYMTestExpectedResults The test should panic
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestMemBadClient7a

END_TESTCASE TEL-ETEL-NA-0089

START_TESTCASE TEL-ETEL-NA-0090
//!@SYMTestCaseID TEL-ETEL-NA-0090
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test bad client case
//!@SYMTestPriority High
//!@SYMTestActions Opens two phone/line from the same instances of RPhone/RLine
//!@SYMTestExpectedResults The test should panic
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestMemBadClient7b

END_TESTCASE TEL-ETEL-NA-0090

START_TESTCASE TEL-ETEL-NA-0091
//!@SYMTestCaseID TEL-ETEL-NA-0091
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test data port
//!@SYMTestPriority High
//!@SYMTestActions Attempts to gain control of the serial communications 
//!                abstraction used to communicate with a modem, uses 
//!                RCall::TCommPort
//!@SYMTestExpectedResults The test should panic
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestMemDataPort

END_TESTCASE TEL-ETEL-NA-0091

START_TESTCASE TEL-ETEL-NA-0092
//!@SYMTestCaseID TEL-ETEL-NA-0092
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test call owner client panic
//!@SYMTestPriority High
//!@SYMTestActions Tests call owner client panic situation
//!@SYMTestExpectedResults The test should panic
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestMemCallOwner

END_TESTCASE TEL-ETEL-NA-0092

START_TESTCASE TEL-ETEL-NA-0093
//!@SYMTestCaseID TEL-ETEL-NA-0093
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test data port
//!@SYMTestPriority High
//!@SYMTestActions Tries gain control of the serial communications of same call
//!                from different sessions
//!@SYMTestExpectedResults The test should panic
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestDataPortCase5

END_TESTCASE TEL-ETEL-NA-0093

START_TESTCASE TEL-ETEL-NA-0094
//!@SYMTestCaseID TEL-ETEL-NA-0094
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test zero length dials 
//!@SYMTestPriority High
//!@SYMTestActions Attempts to establish a connection using the "empty" 
//!                telephone number
//!@SYMTestExpectedResults The test should panic
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestMemZeroLength

END_TESTCASE TEL-ETEL-NA-0094

START_TESTCASE TEL-ETEL-NA-0082
//!@SYMTestCaseID TEL-ETEL-NA-0082
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test unloading of a comms module
//!@SYMTestPriority High
//!@SYMTestActions Unloads a communications module
//!@SYMTestExpectedResults The test should panic
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestEtelUnLoadDrv
END_TESTCASE TEL-ETEL-NA-0082

START_TESTCASE TEL-ETEL-NA-0096
//!@SYMTestCaseID TEL-ETEL-NA-0096
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc To check that client has the required Capability to successfully call SetEmergencyClient API.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetEmergencyClient API with different capability and check whether the client is able to access the API or not.
//!@SYMTestExpectedResults SetEmergencyClient API has to fail as there is no required capability.
//!@SYMTestType CT
PRINT --------  Testing SetEmergencyClient API with different capability,Capability set to Network Control
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00400 Te_Etel_cap1.exe
PRINT --------  capabilities now set to Network Control
LOAD_SUITE Te_Etel_cap1
RUN_TEST_STEP 300 Te_Etel_cap1 TestSetEmergencyClientCapabilityNegCheck
END_TESTCASE TEL-ETEL-NA-0096

START_TESTCASE TEL-ETEL-NA-0097
//!@SYMTestCaseID TEL-ETEL-NA-0097
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc To check that client has the required Capability to successfully call SetEmergencyClient API.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetEmergencyClient API with required capability and check whether the client is able to access the API or not.
//!@SYMTestExpectedResults As SetEmergencyClient API has  required capability it has to pass.
//!@SYMTestType CT
PRINT --------  Testing SetEmergencyClient API with same capability,Capability set to Writedevicedata
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00000020 Te_Etel_cap2.exe
PRINT --------  capabilities now set to Writedevicedata
LOAD_SUITE Te_Etel_cap2
RUN_TEST_STEP 300 Te_Etel_cap2 TestSetEmergencyClientCapabilityPosCheck
END_TESTCASE TEL-ETEL-NA-0097

START_TESTCASE TEL-ETEL-NA-0098
//!@SYMTestCaseID TEL-ETEL-NA-0098
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc Multiple call of SetEmergencyClient(LCS Request) API on the Same session from the same client.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetEmergencyClient(LCS Request) API twice on the same session
//!@SYMTestExpectedResults As we are calling the same API multiple times from the same session First call of SetEmergencyClient(LCS Request) API has to pass and the second call has to fail
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestSetEmgClientLCSReqMulCallFrSameSes

END_TESTCASE TEL-ETEL-NA-0098

START_TESTCASE TEL-ETEL-NA-0099
//!@SYMTestCaseID TEL-ETEL-NA-0099
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc Multiple call of SetEmergencyClient(LCS Request) API on the different sub session from the same client.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetEmergencyClient(LCS Request) API on the different sub session
//!@SYMTestExpectedResults As we are calling the API multiple times from the different sub session First call of SetEmergencyClient(LCS Request) API has to pass and the second call has to fail
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestSetEmgClientLCSReqMulCallFrDiffSubSes

END_TESTCASE TEL-ETEL-NA-0099

START_TESTCASE TEL-ETEL-NA-0100
//!@SYMTestCaseID TEL-ETEL-NA-0100
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc Multiple call of SetEmergencyClient(LCS Request) API from the different client.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetEmergencyClient(LCS Request) API on the different threads
//!@SYMTestExpectedResults As we are calling the API multiple times from the different client First call of SetEmergencyClient(LCS Request) API has to pass and the second call also has to pass
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestSetEmgClientLCSReqMulCallFrDiffClt

END_TESTCASE TEL-ETEL-NA-0100

START_TESTCASE TEL-ETEL-NA-0101
//!@SYMTestCaseID TEL-ETEL-NA-0101
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc Multiple call of SetEmergencyClient(Voice Request) API on the Same session in the same client.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetEmergencyClient(Voice Request) API twice on the same session
//!@SYMTestExpectedResults As we are calling the same API multiple times from the same session First call of SetEmergencyClient(Voice Request) API has to pass and the second call has to fail
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestSetEmgClientVoiceReqMulCallFrSameSes

END_TESTCASE TEL-ETEL-NA-0101

START_TESTCASE TEL-ETEL-NA-0102
//!@SYMTestCaseID TEL-ETEL-NA-0102
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc Multiple call of SetEmergencyClient(Voice Request) API on the different session from the same client.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetEmergencyClient(Voice Request) API on the different sub session
//!@SYMTestExpectedResults As we are calling the API multiple times from the different sub session First call of SetEmergencyClient(Voice Request) API has to pass and the second call has to fail
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestSetEmgClientVoiceReqMulCallFrDiffSubSes

END_TESTCASE TEL-ETEL-NA-0102

START_TESTCASE TEL-ETEL-NA-0103
//!@SYMTestCaseID TEL-ETEL-NA-0103
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc Multiple call of SetEmergencyClient(Voice Request) API on the different client.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetEmergencyClient(Voice Request) API on the different threads
//!@SYMTestExpectedResults As we are calling the API multiple times from the different client First call of SetEmergencyClient(Voice Request) API has to pass and the second call has to fail
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestSetEmgClientVoiceReqMulCallFrDiffClt

END_TESTCASE TEL-ETEL-NA-0103

START_TESTCASE TEL-ETEL-NA-0104
//!@SYMTestCaseID TEL-ETEL-NA-0104
//!@SYMAPI RTelServer::SetPriorityClient
//!@SYMTestCaseDesc To check client has the required SID and Capability to successfully call SetPriorityClient API.
//!@SYMTestPriority High
//!@SYMTestActions  Call the SetPriorityClient API with required SID and required Capability and check the return value of the API        
//!@SYMTestExpectedResults As SetPriorityClient API has the required Capability(Network Control) it has to pass successfully.
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClient API with same capability and same SID
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00400 -SID 10281806 Te_Etel_cap3.exe
PRINT --------  capabilities now set to Network Control
LOAD_SUITE Te_Etel_cap3
RUN_TEST_STEP 300 Te_Etel_cap3 TestSetPrClientCapNsidPosCheck
END_TESTCASE TEL-ETEL-NA-0104

START_TESTCASE TEL-ETEL-NA-0105
//!@SYMTestCaseID TEL-ETEL-NA-0105
//!@SYMAPI RTelServer::SetPriorityClient
//!@SYMTestCaseDesc To check client has the required SID and Capability to successfully call SetPriorityClient API.
//!@SYMTestPriority High
//!@SYMTestActions  Call the SetPriorityClient API with Different SID and required Capability and check the return value of the API 
//!@SYMTestExpectedResults As SetPriorityClient API has different SID it has to fail.
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClient API with same capability and diffrent SID,Capability set to Network control and SID set to 123456
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00400 -SID 123456 Te_Etel_cap4.exe
PRINT --------  capability now set to Network Control and SID set to 0x123456
LOAD_SUITE Te_Etel_cap4
RUN_TEST_STEP 300 Te_Etel_cap4 TestSetPrClientCapNsidNegCheck
END_TESTCASE TEL-ETEL-NA-0105

START_TESTCASE TEL-ETEL-NA-0106
//!@SYMTestCaseID TEL-ETEL-NA-0106
//!@SYMAPI RTelServer::SetPriorityClient
//!@SYMTestCaseDesc To check client has the required SID and Capability to successfully call SetPriorityClient API.
//!@SYMTestPriority High
//!@SYMTestActions  Call the SetPriorityClient API with required SID and Different Capability and check the return value of the API
//!@SYMTestExpectedResults As SetPriorityClient API has different capability it has to fail.
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClient API with required SID and different capability,Capability set to write device data and SID set to 102797FE 
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00000020 -SID 10281806 Te_Etel_cap5.exe
PRINT --------  capabilities now set to write device data and SID set to ox102797FE
LOAD_SUITE Te_Etel_cap5
RUN_TEST_STEP 300 Te_Etel_cap5 TestSetPrClientCapNsidNegCheck
END_TESTCASE TEL-ETEL-NA-0106

START_TESTCASE TEL-ETEL-NA-0107
//!@SYMTestCaseID TEL-ETEL-NA-0107
//!@SYMAPI RTelServer::SetPriorityClient
//!@SYMTestCaseDesc To check client has the required SID and Capability to successfully call SetPriorityClient API.
//!@SYMTestPriority High
//!@SYMTestActions  Call the SetPriorityClient API with Different SID and Different Capability and check the return value of the API
//!@SYMTestExpectedResults As SetPriorityClient API has different SID and Different Capability it has to fail.
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClient API with different capability and different SID,Capability set to write device data and SID set to 123456
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00000020 -SID 123456 Te_Etel_cap6.exe
PRINT --------  capabilities now set to write device data and SID set to 0x123456
LOAD_SUITE Te_Etel_cap6
RUN_TEST_STEP 300 Te_Etel_cap6 TestSetPrClientCapNsidNegCheck
END_TESTCASE TEL-ETEL-NA-0107

START_TESTCASE TEL-ETEL-NA-0108
//!@SYMTestCaseID TEL-ETEL-NA-0108
//!@SYMAPI RTelServer::SetPriorityClient
//!@SYMTestCaseDesc Multiple call of SetPriorityClient API from the Same session,same client.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetPriorityClient API twice on the same session
//!@SYMTestExpectedResults First call of SetPriorityClient API has to pass and the second call has to fail
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClient API with same capability and same SID
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00400 -SID 10281806 Te_Etel_cap11.exe
PRINT --------  capabilities now set to Network Control
LOAD_SUITE Te_Etel_cap11
RUN_TEST_STEP 300 Te_Etel_cap11	TestSetPrClientMulCallFrSameSes

END_TESTCASE TEL-ETEL-NA-0108

START_TESTCASE TEL-ETEL-NA-0109
//!@SYMTestCaseID TEL-ETEL-NA-0109
//!@SYMAPI RTelServer::SetPriorityClient 
//!@SYMTestCaseDesc Multiple call of SetPriorityClient API from the different sub session,same client.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetPriorityClient API on the different sub session
//!@SYMTestExpectedResults First call of SetPriorityClient API has to pass and the second call has to fail
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClient API with same capability and same SID
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00400 -SID 10281806 Te_Etel_cap12.exe
PRINT --------  capabilities now set to Network Control
LOAD_SUITE Te_Etel_cap12
RUN_TEST_STEP 300 Te_Etel_cap12	TestSetPrClientMulCallFrDiffSubSes

END_TESTCASE TEL-ETEL-NA-0109

START_TESTCASE TEL-ETEL-NA-0110
//!@SYMTestCaseID TEL-ETEL-NA-0110
//!@SYMAPI RTelServer::SetPriorityClient
//!@SYMTestCaseDesc Multiple call of SetPriorityClient API on the different client.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetPriorityClient API on the different threads
//!@SYMTestExpectedResults First call of SetPriorityClient API has to pass and the second call has to fail
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClient API with same capability and same SID
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00400 -SID 10281806 Te_Etel_cap13.exe
PRINT --------  capabilities now set to Network Control
LOAD_SUITE Te_Etel_cap13
RUN_TEST_STEP 300 Te_Etel_cap13	TestSetPrClientMulCallFrDiffClt

END_TESTCASE TEL-ETEL-NA-0110

START_TESTCASE TEL-ETEL-NA-0111
//!@SYMTestCaseID TEL-ETEL-NA-0111
//!@SYMAPI RTelServer::SetPriorityClient 
//!@SYMTestCaseDesc To check client has the required SID and Capability to successfully call SetPriorityClient V2API.
//!@SYMTestPriority High
//!@SYMTestActions  Call the SetPriorityClient V2API with required SID and required Capability and check the return value of the API        
//!@SYMTestExpectedResults As SetPriorityClient V2API has required SID and required capability it has to pass successfully.
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClient V2API with same capability(Network Control)and same SID
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00400 -SID 10281806 Te_Etel_cap7.exe
PRINT --------  capabilities now set to Network Control
LOAD_SUITE Te_Etel_cap7
RUN_TEST_STEP 300 Te_Etel_cap7 TestSetPrClientV2CapNsidPosCheck
END_TESTCASE TEL-ETEL-NA-0111

START_TESTCASE TEL-ETEL-NA-0112
//!@SYMTestCaseID TEL-ETEL-NA-0112
//!@SYMAPI RTelServer::SetPriorityClient
//!@SYMTestCaseDesc To check client has the required SID and Capability to successfully call SetPriorityClient V2API.
//!@SYMTestPriority High
//!@SYMTestActions  Call the SetPriorityClient V2API with Different SID and required Capability and check the return value of the API 
//!@SYMTestExpectedResults As SetPriorityClient V2API has different SID it has to fail.
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClient V2API with same capability and diffrent SID,Capability set to Network control and SID set to 123456
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00400 -SID 123456 Te_Etel_cap8.exe
PRINT --------  capabilities now set to Network control and SID set to 0x123456
LOAD_SUITE Te_Etel_cap8
RUN_TEST_STEP 300 Te_Etel_cap8 TestSetPrClientV2CapNsidNegCheck
END_TESTCASE TEL-ETEL-NA-0112

START_TESTCASE TEL-ETEL-NA-0113
//!@SYMTestCaseID TEL-ETEL-NA-0113
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc To check client has the required SID and Capability to successfully call SetPriorityClientV2 API.
//!@SYMTestPriority High
//!@SYMTestActions  Call the SetPriorityClientV2 API with required SID and Different Capability and check the return value of the API
//!@SYMTestExpectedResults As SetPriorityClientV2 API has different capability it has to fail.
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClientV2 API with required SID and different capability,Capability set to write device data and SID set to 10281806
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00000020 -SID 10281806 Te_Etel_cap9.exe
PRINT --------  capabilities now set to write device data and SID set to 0x102797FE
LOAD_SUITE Te_Etel_cap9
RUN_TEST_STEP 300 Te_Etel_cap9 TestSetPrClientV2CapNsidNegCheck
END_TESTCASE TEL-ETEL-NA-0113

START_TESTCASE TEL-ETEL-NA-0114
//!@SYMTestCaseID TEL-ETEL-NA-0114
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc To check client has the required SID and Capability to successfully call SetPriorityClientV2 API.
//!@SYMTestPriority High
//!@SYMTestActions  Call the SetPriorityClientV2 API with Different SID and Different Capability and check the return value of the API
//!@SYMTestExpectedResults As SetPriorityClientV2 API has different SID and differnt capability it has to fail.
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClientV2 API with different capability and different SID,Capability set to write device data and SID set to 123456
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00000020 -SID 123456 Te_Etel_cap10.exe
PRINT --------  capabilities now set to write device data and SID set to 0x123456
LOAD_SUITE Te_Etel_cap10
RUN_TEST_STEP 300 Te_Etel_cap10 TestSetPrClientV2CapNsidNegCheck
END_TESTCASE TEL-ETEL-NA-0114

START_TESTCASE TEL-ETEL-NA-0115
//!@SYMTestCaseID TEL-ETEL-NA-0115
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc Multiple call of SetPriorityClientV2 API on the Same session in the same client.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetPriorityClientV2 API twice on the same session
//!@SYMTestExpectedResults First call of SetPriorityClientV2 API has to pass and the second call has to fail
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClient V2API with same capability(Network Control)and same SID
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00400 -SID 10281806 Te_Etel_cap14.exe
PRINT --------  capabilities now set to Network Control
LOAD_SUITE Te_Etel_cap14
RUN_TEST_STEP 300 Te_Etel_cap14	TestSetPrClientV2MulCallFrSameSes
END_TESTCASE TEL-ETEL-NA-0115

START_TESTCASE TEL-ETEL-NA-0116
//!@SYMTestCaseID TEL-ETEL-NA-0116
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc Multiple call of SetPriorityClientV2 API on the different sub session in the same client.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetPriorityClientV2 API on the different sub session
//!@SYMTestExpectedResults First call of SetPriorityClientV2 API has to pass and the second call has to fail
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClient V2API with same capability(Network Control)and same SID
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00400 -SID 10281806 Te_Etel_cap15.exe
PRINT --------  capabilities now set to Network Control
LOAD_SUITE Te_Etel_cap15
RUN_TEST_STEP 300 Te_Etel_cap15 TestSetPrClientV2MulCallFrDiffSubSes
END_TESTCASE TEL-ETEL-NA-0116

START_TESTCASE TEL-ETEL-NA-0117
//!@SYMTestCaseID TEL-ETEL-NA-0117
//!@SYMREQ REQ6242
//!@SYMTestCaseDesc Multiple call of SetPriorityClient V2API on the different client.
//!@SYMTestPriority High
//!@SYMTestActions  Call SetPriorityClientV2 API on the different threads
//!@SYMTestExpectedResults First call of SetPriorityClientV2 API has to pass and the second call has to fail
//!@SYMTestType CT
PRINT --------  Testing SetPriorityClient V2API with same capability(Network Control)and same SID
RUN_PROGRAM -1 setcap.exe Te_Etel.exe 00400 -SID 10281806 Te_Etel_cap16.exe
PRINT --------  capabilities now set to Network Control
LOAD_SUITE Te_Etel_cap16
RUN_TEST_STEP 300 Te_Etel_cap16	TestSetPrClientV2MulCallFrDiffClt
END_TESTCASE TEL-ETEL-NA-0117

START_TESTCASE TEL-ETEL-NA-0118
//!@SYMTestCaseID TEL-ETEL-NA-0118
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::GetTsyName and RTelServer::SendReceive( EEtelServerGetTsyName, ... ) 
//! return no errors when they use a large enough valid buffer for returning the tsy name. 
//!@SYMTestPriority High
//!@SYMTestActions Calls to RTelServer::GetTsyName returns KErrNone and a tsy name.
//!	RTelServer::GetTsyName calls RTelServer::SendReceive( EEtelServerGetTsyName, ... ) 
//!	and it is the IPC that should return the tsy name and indicate no errors occured.
//!@SYMTestExpectedResults Pass. No errors and a valid tsy name.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrGetTsyOk
END_TESTCASE TEL-ETEL-NA-0118

START_TESTCASE TEL-ETEL-NA-0119
//!@SYMTestCaseID TEL-ETEL-NA-0119
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::SendReceive( EEtelServerGetTsyName, ... ) returns an error when a bad descriptor is passed in.  
//!@SYMTestPriority High
//!@SYMTestActions Calls RTelServer::SendReceive( EEtelServerGetTsyName, args ) where args[1] contains a bad descriptor in which to receive the tsy name.
//!@SYMTestExpectedResults Pass. SendReceive() should return an error due to descriptor for tsy name being bad.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrGetTsyIllegalBuffer
END_TESTCASE TEL-ETEL-NA-0119

START_TESTCASE TEL-ETEL-NA-0120
//!@SYMTestCaseID TEL-ETEL-NA-0120
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc  Check that RTelServer::SendReceive( EEtelServerGetTsyName, ... ) returns an error when a descriptor is too small 
//!	for the tsy name.
//!@SYMTestPriority High
//!@SYMTestActions Calls RTelServer::SendReceive( EEtelServerGetTsyName, args ) where args[1] contains a descriptor that is to small to receive the tsy name.
//!@SYMTestExpectedResults Pass. SendReceive() should return an error due to descriptor for tsy name being too small.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrGetTsySmallBuffer
END_TESTCASE TEL-ETEL-NA-0120

START_TESTCASE TEL-ETEL-NA-0121
//!@SYMTestCaseID TEL-ETEL-NA-0121
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::GetTsyVersionNumber and RTelServer::SendReceive( EEtelServerGetTsyVersionNo, ... )
//! return no errors when there is a large enough valid buffer to hold the version number.
//!@SYMTestPriority High
//!@SYMTestActions Calls to RTelServer::GetTsyVersionNumber returns KErrNone and the version number.
//!	RTelServer::GetTsyVersionNumber calls RTelServer::SendReceive( EEtelServerGetTsyVersionNo, ... ) 
//!	and it is this IPC that should return the version number and indicate no errors occured.
//!@SYMTestExpectedResults Pass. No errors and a valid version number.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrGetTsyVersionNumberOk
END_TESTCASE TEL-ETEL-NA-0121

START_TESTCASE TEL-ETEL-NA-0122
//!@SYMTestCaseID TEL-ETEL-NA-0122
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::SendReceive( EEtelServerGetTsyVersionNo, ... ) returns an error when a bad buffer is passed in.
//!@SYMTestPriority High
//!@SYMTestActions Calls RTelServer::SendReceive( EEtelServerGetTsyVersionNo, args ) where args[1] contains a buffer that is of the wrong type 
//!	to receive the version number.
//!@SYMTestExpectedResults Pass. SendReceive() should return an error due to buffer for version number being of the wrong type.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrGetTsyVersionNumberIllegalBuffer
END_TESTCASE TEL-ETEL-NA-0122

START_TESTCASE TEL-ETEL-NA-0123
//!@SYMTestCaseID TEL-ETEL-NA-0123
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc  Check that RTelServer::SendReceive( EEtelServerGetTsyVersionNo, ... ) returns an error when a descriptor is too small 
//!	for the version info.
//!@SYMTestPriority High
//!@SYMTestActions Calls RTelServer::SendReceive( EEtelServerGetTsyVersionNo, args ) where args[1] contains a descriptor that is to small 
//!	to receive the version info.
//!@SYMTestExpectedResults Pass. SendReceive() should return an error due to descriptor for the version info being too small.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrGetTsyVersionNumberSmallBuffer
END_TESTCASE TEL-ETEL-NA-0123

START_TESTCASE TEL-ETEL-NA-0124
//!@SYMTestCaseID TEL-ETEL-NA-0124
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::GetPhoneInfo and RTelServer::SendReceive( EEtelServerPhoneInfoByIndex, ... )
//! return no errors when there is a large enough valid buffer to hold the phone info.
//!@SYMTestPriority High
//!@SYMTestActions Calls to RTelServer::GetPhoneInfo returns KErrNone and the phone info.
//!	RTelServer::GetTsyVersionNumber calls RTelServer::SendReceive( EEtelServerPhoneInfoByIndex, ... ) 
//!	and it is this IPC that should return the phone info and indicate that no errors occured.
//!@SYMTestExpectedResults Pass. No errors and valid phone info.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrGetPhoneInfoOk
END_TESTCASE TEL-ETEL-NA-0124

START_TESTCASE TEL-ETEL-NA-0125
//!@SYMTestCaseID TEL-ETEL-NA-0125
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::SendReceive( EEtelServerPhoneInfoByIndex, ... ) returns an error when a bad buffer is passed in.  
//!@SYMTestPriority High
//!@SYMTestActions Calls RTelServer::SendReceive( EEtelServerPhoneInfoByIndex, args ) where args[1] contains a buffer that is of the wrong type 
//!	to receive the version number.
//!@SYMTestExpectedResults Pass. SendReceive() should return an error due to buffer for phone info being of the wrong type.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrGetPhoneInfoIllegalBuffer
END_TESTCASE TEL-ETEL-NA-0125

START_TESTCASE TEL-ETEL-NA-0126
//!@SYMTestCaseID TEL-ETEL-NA-0126
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::SendReceive( EEtelServerPhoneInfoByIndex, ... ) returns an error when a descriptor is too small 
//!	for the phone info.
//!@SYMTestPriority High
//!@SYMTestActions Calls RTelServer::SendReceive( EEtelServerPhoneInfoByIndex, args ) where args[1] contains a descriptor that is to small 
//!	to receive the phone info.
//!@SYMTestExpectedResults Pass. SendReceive() should return an error due to descriptor for the version info being too small.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrGetPhoneInfoSmallBuffer
END_TESTCASE TEL-ETEL-NA-0126

START_TESTCASE TEL-ETEL-NA-0127
//!@SYMTestCaseID TEL-ETEL-NA-0127
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::IsSupportedByModuleo and RTelServer::SendReceive( EEtelServerQueryTsyFunctionality, ... )
//! return no errors when there is a large enough valid buffer to hold the result.
//!@SYMTestPriority High
//!@SYMTestActions Calls to RTelServer::IsSupportedByModuleo returns KErrNone and a result.
//!	RTelServer::IsSupportedByModuleo calls RTelServer::SendReceive( EEtelServerQueryTsyFunctionality, ... ) 
//!	and it is this IPC that should return the result and indicate no errors occured.
//!@SYMTestExpectedResults Pass. No errors and a valid result.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrIsSupportedByModuleOk
END_TESTCASE TEL-ETEL-NA-0127

START_TESTCASE TEL-ETEL-NA-0128
//!@SYMTestCaseID TEL-ETEL-NA-0128
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::SendReceive( EEtelServerQueryTsyFunctionality, ... ) returns an error when a bad return buffer is passed in.  
//!@SYMTestPriority High
//!@SYMTestActions Calls RTelServer::SendReceive( EEtelServerQueryTsyFunctionality, args ) where args[2] contains a buffer that is of the wrong type 
//!	to receive the funtionality results.
//!@SYMTestExpectedResults Pass. SendReceive() should return an error due to buffer results being of the wrong type.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrIsSupportedByModuleRetIllegalBuffer
END_TESTCASE TEL-ETEL-NA-0128

START_TESTCASE TEL-ETEL-NA-0136
//!@SYMTestCaseID TEL-ETEL-NA-0136
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::SendReceive( EEtelServerQueryTsyFunctionality, ... ) returns an error when a return buffer is too small.  
//!@SYMTestPriority High
//!@SYMTestActions Calls RTelServer::SendReceive( EEtelServerQueryTsyFunctionality, args ) where args[2] contains a buffer that is too small 
//!	to receive the funtionality results.
//!@SYMTestExpectedResults Pass. SendReceive() should return an error due to buffer results being too small.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrIsSupportedByModuleRetSmallBuffer
END_TESTCASE TEL-ETEL-NA-0136

START_TESTCASE TEL-ETEL-NA-0129
//!@SYMTestCaseID TEL-ETEL-NA-0129
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::SendReceive( EEtelServerQueryTsyFunctionality, ... ) returns an error when a bad buffer is passed in.  
//!@SYMTestPriority High
//!@SYMTestActions  Calls RTelServer::SendReceive( EEtelServerQueryTsyFunctionality, args ) where args[1] contains a buffer that is of the wrong type 
//!@SYMTestExpectedResults Pass. SendReceive() should return an error due to buffer being of the wrong type.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrIsSupportedByModuleIllegalBuffer
END_TESTCASE TEL-ETEL-NA-0129

START_TESTCASE TEL-ETEL-NA-0137
//!@SYMTestCaseID TEL-ETEL-NA-0137
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::SendReceive( EEtelServerQueryTsyFunctionality, ... ) returns an error when a small buffer is passed in.  
//!@SYMTestPriority High
//!@SYMTestActions  Calls RTelServer::SendReceive( EEtelServerQueryTsyFunctionality, args ) where args[1] contains a buffer that is too small 
//!@SYMTestExpectedResults Pass. SendReceive() should return an error due to buffer being of the wrong type.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrIsSupportedByModuleSmallBuffer
END_TESTCASE TEL-ETEL-NA-0137

START_TESTCASE TEL-ETEL-NA-0130
//!@SYMTestCaseID TEL-ETEL-NA-0130
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::SetExtendedErrorGranularity and RTelServer::SendReceive( EEtelServerSetExtendedErrorGranularity, ... )
//! return no errors (or panics) when there is a large enough input buffer to hold the granularity settings.
//!@SYMTestPriority High
//!@SYMTestActions  Calls to RTelServer::SetExtendedErrorGranularity returns KErrNone.
//!	RTelServer::SetExtendedErrorGranularity calls RTelServer::SendReceive( EEtelServerSetExtendedErrorGranularity, ... ) 
//!	and it is this IPC that should return no error.
//!@SYMTestExpectedResults Pass.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrSetExtendedErrorGranularityOk
END_TESTCASE TEL-ETEL-NA-0130

START_TESTCASE TEL-ETEL-NA-0131
//!@SYMTestCaseID TEL-ETEL-NA-0131
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::SendReceive( EEtelServerSetExtendedErrorGranularity, ... ) panics the client when the wrong size buffer is passed in.  
//!@SYMTestPriority High
//!@SYMTestActions  Calls RTelServer::SendReceive( EEtelServerSetExtendedErrorGranularity, args ) where args[1] contains a buffer that is of the wrong type.
//! This will panic the client.
//!@SYMTestExpectedResults Panic.
//!@SYMTestType CT
RUN_PANIC_STEP 300 TE_Etel TestErrSetExtendedErrorGranularityPanic
END_TESTCASE TEL-ETEL-NA-0131

START_TESTCASE TEL-ETEL-NA-0132
//!@SYMTestCaseID TEL-ETEL-NA-0132
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that RTelServer::OpenNewCall returns no errors 
//! when it has a large enough valid buffer to put the call name in. 
//!@SYMTestPriority High
//!@SYMTestActions  Call to RTelServer::OpenNewCall returns KErrNone as before, and a valid call name.
//!@SYMTestExpectedResults Pass. No errors and valid call name.
RUN_TEST_STEP 300 TE_Etel TestErrNewTelObjectOk
END_TESTCASE TEL-ETEL-NA-0132

START_TESTCASE TEL-ETEL-NA-0133
//!@SYMTestCaseID TEL-ETEL-NA-0133
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc Check that CTelSession::NewTelObject fails when an illegal buffer is passed to it for the name of the call.
//!	(Uses similar code to that in RTelServer::OpenNewCall().)
//!@SYMTestPriority High
//!@SYMTestActions Attempt to pass an illegal buffer to CTelSession::NewTelObject via call to CreateSubSession.
//!@SYMTestExpectedResults Pass. CreateSubSession should return an error.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrNewTelObjectIllegalBuffer
END_TESTCASE TEL-ETEL-NA-0133

START_TESTCASE TEL-ETEL-NA-0134
//!@SYMTestCaseID TEL-ETEL-NA-0134
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc  Check that CTelSession::NewTelObject fails when a small buffer is passed to it for the name of the call.
//! 	(Uses similar code to that in RTelServer::OpenNewCall().)
//!@SYMTestPriority High
//!@SYMTestActions  Attempt to pass an small buffer to CTelSession::NewTelObject via call to CreateSubSession.
//!@SYMTestExpectedResults  Pass. CreateSubSession should return an error.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrNewTelObjectSmallBuffer
END_TESTCASE TEL-ETEL-NA-0134

START_TESTCASE TEL-ETEL-NA-0135
//!@SYMTestCaseID TEL-ETEL-NA-0135
//!@SYMDEF DEF108765
//!@SYMTestCaseDesc  Check that CTelSession::NewTelObject fails when an illegal buffer is passed to it for the name of the call.
//! 	(Uses similar code to that in RTelServer::OpenNewCall().)
//!@SYMTestPriority High
//!@SYMTestActions  Attempt to pass an illegal buffer to CTelSession::NewTelObject via call to SendReceive(EEtelOpenFromSubSession, ...)
//!@SYMTestExpectedResults Pass. SendReceive(EEtelOpenFromSubSession, ...) should return an error.
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestErrNewTelObjectHandleIllegalBuffer
END_TESTCASE TEL-ETEL-NA-0135


START_TESTCASE TEL-ETEL-NA-0138
//!@SYMTestCaseID TEL-ETEL-NA-0138
//!@SYMDEF INC122765
//!@SYMTestCaseDesc  Check that when the descriptor is destroy before the request end, ETEL will not panic
//!@SYMTestPriority High
//!@SYMTestActions  Destroy the descriptor before the asynch request is complete
//!@SYMTestExpectedResults Pass. ETEL should not panic
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestPanicAfterRequest
END_TESTCASE TEL-ETEL-NA-0138

START_TESTCASE TEL-ETEL-NA-0139
//!@SYMTestCaseID TEL-ETEL-NA-0139
//!@SYMREQ REQ0000
//!@SYMTestCaseDesc Test flow control
//!@SYMTestPriority High
//!@SYMTestActions Send two same requests from different clients with request mode multiple comnpletion 
//!                enabled and obeyed flow control: first request is cancelled and the second request is 
//!                expected to be completed without any panic.
//!@SYMTestExpectedResults Pass, if any APIs fail the step will leave
//!@SYMTestType CT
RUN_TEST_STEP 300 TE_Etel TestFlowControl7
END_TESTCASE TEL-ETEL-NA-0139

