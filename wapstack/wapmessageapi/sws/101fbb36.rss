// Copyright (c) 1997-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
// Registry file for WAP Messaging API, 8.0 WAP Stack bindings DLL
// Interfaces : MWapBoundDatagramService, MWapFullySpecDatagramService,
// MWapBoundCLPushService, MWapFullySpecCLPushService,
// MWapBoundCLWSPService, MWapFullySpecCLWSPService,
// 
//

#include <ecom/registryinfo.rh>

RESOURCE REGISTRY_INFO theInfo
	{
	// KUidWapMsg
	dll_uid = 0x101FBB36;
	interfaces = 
		{
		INTERFACE_INFO
			{
			// KUidBoundWDPInterface - MWapBoundDatagramService UID
			interface_uid = 0x101F4471;
			implementations = 
				{
				IMPLEMENTATION_INFO
					{
					// KUidSWSBoundWDPService - CSWSWapBoundWDPService UID
					implementation_uid = 0x101FBB37;
					version_no = 1;
					display_name = "CSSWapBoundWDPService";
					default_data = "swswdp/bound";
					opaque_data = "";
					}
				};
			},
		INTERFACE_INFO
			{
			// KUidFullySpecWDPInterface - MWapFullySpecDatagramService UID
			interface_uid = 0x101F4473;
			implementations = 
				{
				IMPLEMENTATION_INFO
					{
					// KUidSWSFullySpecWDPService - CSWSWapFullySpecWDPService UID
					implementation_uid = 0x101FBB38;
					version_no = 1;
					display_name = "CSWSWapFullySpecWDPService";
					default_data = "swswdp/fullyspec";
					opaque_data = "";
					}
				};
			},
		INTERFACE_INFO
			{
			// KUidBoundCLPushInterface - MWapBoundCLPushService UID
			interface_uid = 0x101F4475;
			implementations = 
				{
				IMPLEMENTATION_INFO
					{
					// KUidSWSBoundCLPushService - CSWSWapBoundCLPushService UID
					implementation_uid = 0x101FBB39;
					version_no = 1;
					display_name = "CSWSWapBoundCLPushService";
					default_data = "swsclpush/bound";
					opaque_data = "";
					}
				};
			},
		INTERFACE_INFO
			{
			// KUidFullySpecCLPushInterface - MWapFullySpecCLPushService UID
			interface_uid = 0x101F4477;
			implementations = 
				{
				IMPLEMENTATION_INFO
					{
					// KUidSWSFullySpecCLPushService - CSWSWapFullySpecCLPushService UID
					implementation_uid = 0x101FBB3A;
					version_no = 1;
					display_name = "CSWSWapFullySpecCLPushService";
					default_data = "swsclpush/fullyspec";
					opaque_data = "";
					}
				};
			},
		INTERFACE_INFO
			{
			// KUidBoundCLWSPInterface - MWapBoundCLWSPService UID
			interface_uid = 0x101FBB3B;
			implementations = 
				{
				IMPLEMENTATION_INFO
					{
					// KUidSWSBoundCLWSPService - CSWSWapBoundCLService UID
					implementation_uid = 0x101FBB3C;
					version_no = 1;
					display_name = "CSWSWapBoundCLWSPService";
					default_data = "swsclwsp/bound";
					opaque_data = "";
					}
				};
			},
		INTERFACE_INFO
			{
			// KUidFullySpecCLWSPInterface - MWapFullySpecCLWSPService UID
			interface_uid = 0x101FBB3D;
			implementations = 
				{
				IMPLEMENTATION_INFO
					{
					// KUidSWSFullySpecCLWSPService - CSWSWapFullySpecCLWSPService UID
					implementation_uid = 0x101FBB3E;
					version_no = 1;
					display_name = "CSWSWapFullySpecCLWSPService";
					default_data = "swsclwsp/fullyspec";
					opaque_data = "";
					}
				};
			}
		};
	}

