//
// Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

LOAD_SUITE te_ctsydispatcher_component

START_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0001
//!@SYMTestCaseID BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0001
//!@SYMComponent telephony_ctsy
//!@SYMTestCaseDesc Test returned value if EMobilePhoneGetSecurityCodeInfo is not supported by LTSY
//!@SYMTestPriority High
//!@SYMTestActions Invokes RMobilePhone::GetSecurityCodeInfo()
//!@SYMTestExpectedResults Pass
//!@SYMTestType UT
RUN_TEST_STEP 100 te_ctsydispatcher_component TEFUnit.CCTsySecurityFUNegative.TestUnit0001L
END_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0001

START_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0002
//!@SYMTestCaseID BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0002
//!@SYMComponent telephony_ctsy
//!@SYMTestCaseDesc Test returned value if EMobilePhoneGetLockInfo is not supported by LTSY
//!@SYMTestPriority High
//!@SYMTestActions Invokes RMobilePhone::GetLockInfo()
//!@SYMTestExpectedResults Pass
//!@SYMTestType UT
RUN_TEST_STEP 100 te_ctsydispatcher_component TEFUnit.CCTsySecurityFUNegative.TestUnit0002L
END_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0002

START_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0003
//!@SYMTestCaseID BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0003
//!@SYMComponent telephony_ctsy
//!@SYMTestCaseDesc Test returned value if EMmTsySecurityGetSimActivePinStateIPC is not supported by LTSY
//!@SYMTestPriority High
//!@SYMTestActions Invokes RMmCustomAPI::GetActivePin()
//!@SYMTestExpectedResults Pass
//!@SYMTestType UT
RUN_TEST_STEP 100 te_ctsydispatcher_component TEFUnit.CCTsySecurityFUNegative.TestUnit0003L
END_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0003


START_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0004
//!@SYMTestCaseID BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0004
//!@SYMComponent telephony_ctsy
//!@SYMTestCaseDesc Test support in CTSY for cancelling a Get detected network list
//!@SYMTestPriority High
//!@SYMTestActions Invokes CGetDetectedNetworksAO::Cancel
//!@SYMTestExpectedResults Pass
//!@SYMTestType UT
RUN_TEST_STEP 100 te_ctsydispatcher_component TEFUnit.CCTsySecurityFUNegative.TestUnit0004L
END_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0004


START_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0006
//!@SYMTestCaseID BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0006
//!@SYMComponent telephony_ctsy
//!@SYMTestCaseDesc Test returned value if EMobilePhoneVerifySecurityCode is not supported by LTSY
//!@SYMTestPriority High
//!@SYMTestActions Invokes RMobilePhone::VerifySecurityCode()
//!@SYMTestExpectedResults Pass
//!@SYMTestType UT
RUN_TEST_STEP 100 te_ctsydispatcher_component TEFUnit.CCTsySecurityFUNegative.TestUnit0006L
END_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0006


START_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0008
//!@SYMTestCaseID BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0008
//!@SYMComponent telephony_ctsy
//!@SYMTestCaseDesc Test returned value if ECustomCheckSecurityCodeIPC is not supported by LTSY
//!@SYMTestPriority High
//!@SYMTestActions Invokes RMmCustomAPI::CheckSecurityCode()
//!@SYMTestExpectedResults Pass
//!@SYMTestType UT
RUN_TEST_STEP 100 te_ctsydispatcher_component TEFUnit.CCTsySecurityFUNegative.TestUnit0008L
END_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0008


START_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0009
//!@SYMTestCaseID BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0009
//!@SYMComponent telephony_ctsy
//!@SYMTestCaseDesc Test returned value if ECustomDisablePhoneLockIPC is not supported by LTSY
//!@SYMTestPriority High
//!@SYMTestActions Invokes RMmCustomAPI::DisablePhoneLock()
//!@SYMTestExpectedResults Pass
//!@SYMTestType UT
RUN_TEST_STEP 100 te_ctsydispatcher_component TEFUnit.CCTsySecurityFUNegative.TestUnit0009L
END_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0009


START_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0010
//!@SYMTestCaseID BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0010
//!@SYMComponent telephony_ctsy
//!@SYMTestCaseDesc Test returned value if ECustomGetCipheringInfoIPC is not supported by LTSY
//!@SYMTestPriority High
//!@SYMTestActions Invokes RMmCustomAPI::GetCipheringInfo()
//!@SYMTestExpectedResults Pass
//!@SYMTestType UT
RUN_TEST_STEP 100 te_ctsydispatcher_component TEFUnit.CCTsySecurityFUNegative.TestUnit0010L
END_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0010


START_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0011
//!@SYMTestCaseID BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0011
//!@SYMComponent telephony_ctsy
//!@SYMTestCaseDesc Test returned value if ECustomIsBlockedIPC is not supported by LTSY
//!@SYMTestPriority High
//!@SYMTestActions Invokes RMmCustomAPI::IsBlocked()
//!@SYMTestExpectedResults Pass
//!@SYMTestType UT
RUN_TEST_STEP 100 te_ctsydispatcher_component TEFUnit.CCTsySecurityFUNegative.TestUnit0011L
END_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0011


START_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0012
//!@SYMTestCaseID BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0012
//!@SYMComponent telephony_ctsy
//!@SYMTestCaseDesc Test returned value if ECustomCheckSecurityCodeCancelIPC is not supported by LTSY
//!@SYMTestPriority High
//!@SYMTestActions Invokes RMmCustomAPI::CheckSecurityCode()
//!@SYMTestExpectedResults Pass
//!@SYMTestType UT
RUN_TEST_STEP 100 te_ctsydispatcher_component TEFUnit.CCTsySecurityFUNegative.TestUnit0012L
END_TESTCASE BA-CTSYD-DIS-SECURITY-NEGATIVE-UN0012

