//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @file
//! @SYMTestSuiteName telephony_comms-validation-automated_upload
//! @SYMScriptTestEnvironment This test script requires a basic ROM.
// 
// Tests all public elements of the Rsocket, RSocketServ, Rconnection, RHostResolver,RTelServer, RMobileLine, RMobilePhone, RMmCustomAPI
// classes as a means of confidence that the APIs work as expected.
// 
// The purpose is to provide a regression test suite of PublishedAll
// APIs for: Rsocket, RSocketServ, Rconnection, RHostResolver,RTelServer, RMobileLine, RMobilePhone, RMmCustomAPI
// The tests are fully automated.
//



LOAD_SUITE t_esock_etelmm





START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0001

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0001
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a GPRS access point in Dual mode, upload bytes (0kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = Dual)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = Dual)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPGPRS; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPGPRS)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 3145728; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 3145728; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a GPRS access point in Dual mode, upload bytes (0kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0001-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0001-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0001-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0001-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0001-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0001-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0001-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0001-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0001-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0001-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0001-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0001-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0001-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0001-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0001-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0001




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0002

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0002
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a GPRS access point in Dual mode, upload bytes (100kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = Dual)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = Dual)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPGPRS; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPGPRS)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 102400; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 102400; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a GPRS access point in Dual mode, upload bytes (100kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0002-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0002-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0002-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0002-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0002-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0002-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0002-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0002-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0002-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0002-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0002-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0002-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0002-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0002-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0002-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0002




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0003

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0003
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a GPRS access point in Dual mode, upload bytes (3MB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = Dual)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = Dual)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPGPRS; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPGPRS)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 3145728; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 3145728; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a GPRS access point in Dual mode, upload bytes (3MB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0003-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0003-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0003-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0003-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0003-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0003-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0003-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0003-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0003-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0003-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0003-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0003-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0003-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0003-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0003-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0003




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0004

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0004
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a GPRS access point in GSM mode, upload bytes (0kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = GSM)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = GSM)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPGPRS; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPGPRS)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 0; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 0; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a GPRS access point in GSM mode, upload bytes (0kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0004-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0004-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0004-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0004-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0004-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0004-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0004-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0004-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0004-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0004-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0004-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0004-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0004-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0004-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0004-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0004




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0005

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0005
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a GPRS access point in GSM mode, upload bytes (100kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = GSM)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = GSM)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPGPRS; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPGPRS)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 102400; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 102400; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a GPRS access point in GSM mode, upload bytes (100kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0005-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0005-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0005-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0005-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0005-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0005-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0005-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0005-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0005-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0005-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0005-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0005-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0005-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0005-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0005-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0005




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0006

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0006
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a GPRS access point in GSM mode, upload bytes (3MB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = GSM)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = GSM)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPGPRS; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPGPRS)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 3145728; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 3145728; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a GPRS access point in GSM mode, upload bytes (3MB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0006-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0006-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0006-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0006-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0006-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0006-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0006-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0006-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0006-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0006-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0006-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0006-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0006-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0006-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0006-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0006




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0007

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0007
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a CSD access point in Dual mode, upload bytes (0kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = Dual)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = Dual)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 0; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 0; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a CSD access point in Dual mode, upload bytes (0kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0007-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0007-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0007-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0007-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0007-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0007-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0007-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0007-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0007-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0007-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0007-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0007-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0007-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0007-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0007-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0007




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0008

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0008
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a CSD access point in Dual mode, upload bytes (100kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = Dual)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = Dual)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 102400; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 102400; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a CSD access point in Dual mode, upload bytes (100kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0008-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0008-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0008-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0008-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0008-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0008-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0008-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0008-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0008-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0008-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0008-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0008-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0008-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0008-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0008-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0008




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0009

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0009
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a CSD access point in Dual mode, upload bytes (3MB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = Dual)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = Dual)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 3145728; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 3145728; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a CSD access point in Dual mode, upload bytes (3MB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0009-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0009-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0009-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0009-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0009-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0009-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0009-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0009-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0009-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0009-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0009-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0009-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0009-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0009-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0009-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0009




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0010

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0010
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to an HSCSD access point in Dual mode, upload bytes (0kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = Dual)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = Dual)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPHSCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPHSCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 0; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 0; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to an HSCSD access point in Dual mode, upload bytes (0kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0010-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0010-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0010-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0010-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0010-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0010-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0010-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0010-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0010-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0010-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0010-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0010-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0010-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0010-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0010-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0010




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0011

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0011
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to an HSCSD access point in Dual mode, upload bytes (100kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = Dual)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = Dual)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPHSCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPHSCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 102400; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 102400; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to an HSCSD access point in Dual mode, upload bytes (100kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0011-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0011-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0011-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0011-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0011-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0011-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0011-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0011-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0011-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0011-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0011-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0011-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0011-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0011-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0011-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0011




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0012

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0012
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to an HSCSD access point in Dual mode, upload bytes (3MB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = Dual)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = Dual)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPHSCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPHSCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 3145728; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 3145728; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to an HSCSD access point in Dual mode, upload bytes (3MB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0012-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0012-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0012-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0012-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0012-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0012-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0012-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0012-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0012-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0012-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0012-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0012-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0012-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0012-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0012-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0012




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0013

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0013
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		25/4/2008
//!@SYMTestCaseDesc		Connect to a CSD access point in GSM mode, upload bytes (0kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = GSM)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = GSM)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 0; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 0; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a CSD access point in GSM mode, upload bytes (0kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0013-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0013-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0013-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0013-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0013-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0013-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0013-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0013-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0013-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0013-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0013-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0013-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0013-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0013-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0013-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0013




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0014

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0014
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		25/4/2008
//!@SYMTestCaseDesc		Connect to a CSD access point in GSM mode, upload bytes (100kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = GSM)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = GSM)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 102400; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 102400; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a CSD access point in GSM mode, upload bytes (100kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0014-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0014-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0014-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0014-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0014-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0014-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0014-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0014-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0014-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0014-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0014-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0014-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0014-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0014-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0014-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0014




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0015

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0015
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		25/4/2008
//!@SYMTestCaseDesc		Connect to a CSD access point in GSM mode, upload bytes (3MB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = GSM)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = GSM)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 3145728; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 3145728; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a CSD access point in GSM mode, upload bytes (3MB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0015-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0015-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0015-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0015-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0015-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0015-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0015-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0015-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0015-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0015-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0015-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0015-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0015-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0015-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0015-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0015




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0016

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0016
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a HSCSD access point in GSM mode, upload bytes (0kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = GSM)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = GSM)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPHSCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPHSCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 0; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 0; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a HSCSD access point in GSM mode, upload bytes (0kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0016-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0016-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0016-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0016-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0016-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0016-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0016-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0016-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0016-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0016-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0016-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0016-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0016-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0016-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0016-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0016




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0017

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0017
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a HSCSD access point in GSM mode, upload bytes (100kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = GSM)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = GSM)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPHSCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPHSCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 102400; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 102400; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a HSCSD access point in GSM mode, upload bytes (100kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0017-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0017-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0017-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0017-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0017-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0017-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0017-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0017-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0017-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0017-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0017-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0017-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0017-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0017-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0017-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0017




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0018

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0018
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a HSCSD access point in GSM mode, upload bytes (3MB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = GSM)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = GSM)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPHSCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPHSCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 3145728; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 3145728; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a HSCSD access point in GSM mode, upload bytes (3MB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0018-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0018-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0018-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0018-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0018-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0018-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0018-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0018-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0018-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0018-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0018-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0018-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0018-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0018-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		//COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0018-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0018




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0019

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0019
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a CSD access point in WCDMA mode, upload bytes (0kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = WCDMA)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = WCDMA)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 0; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 0; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Implemented
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a CSD access point in WCDMA mode, upload bytes (0kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0019-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0019-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0019-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0019-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0019-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0019-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0019-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0019-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0019-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0019-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0019-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0019-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0019-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0019-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0019-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0019




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0020

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0020
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a CSD access point in WCDMA mode, upload bytes (100kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = WCDMA)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = WCDMA)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 102400; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 102400; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Implemented
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a CSD access point in WCDMA mode, upload bytes (100kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0020-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0020-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0020-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0020-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0020-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0020-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0020-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0020-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0020-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0020-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0020-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0020-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0020-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0020-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0020-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0020




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0021

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0021
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a CSD access point in WCDMA mode, upload bytes (3MB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = WCDMA)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = WCDMA)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 3145728; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 3145728; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Implemented
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a CSD access point in WCDMA mode, upload bytes (3MB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0021-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0021-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0021-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0021-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0021-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0021-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0021-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0021-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0021-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0021-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0021-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0021-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0021-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0021-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0021-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0021




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0022

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0022
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to an HSCSD access point in WCDMA mode, upload bytes (0kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = WCDMA)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = WCDMA)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPHSCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPHSCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 0; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 0; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Implemented
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to an HSCSD access point in WCDMA mode, upload bytes (0kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0022-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0022-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0022-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0022-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0022-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0022-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0022-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0022-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0022-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0022-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0022-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0022-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0022-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0022-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0022-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0022




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0023

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0023
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to an HSCSD access point in WCDMA mode, upload bytes (100kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = WCDMA)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = WCDMA)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPHSCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPHSCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 102400; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 102400; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Implemented
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to an HSCSD access point in WCDMA mode, upload bytes (100kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0023-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0023-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0023-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0023-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0023-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0023-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0023-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0023-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0023-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0023-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0023-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0023-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0023-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0023-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0023-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0023




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0024

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0024
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to an HSCSD access point in WCDMA mode, upload bytes (3MB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = WCDMA)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = WCDMA)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPHSCSD; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPHSCSD)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 3145728; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 3145728; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to an HSCSD access point in WCDMA mode, upload bytes (3MB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0024-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0024-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0024-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0024-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0024-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0024-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0024-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0024-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0024-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0024-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0024-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0024-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0024-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0024-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0024-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0024




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0025

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0025
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a PSD access point in WCDMA mode, upload bytes (0kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = WCDMA)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = WCDMA)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPGPRS; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPGPRS)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 0; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 0; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                23.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a PSD access point in WCDMA mode, upload bytes (0kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0025-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0025-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0025-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0025-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0025-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0025-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0025-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0025-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0025-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0025-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0025-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0025-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0025-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0025-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0025-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0025




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0026

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0026
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a PSD access point in WCDMA mode, upload bytes (100kB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = WCDMA)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = WCDMA)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPGPRS; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPGPRS)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                13.- BuildRequest (Address = {URL,address1}; Bytes = 102400)
//!                18.- RSocketWrite
//!                15.- SendBytesToSocket (Bytes = 102400; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a PSD access point in WCDMA mode, upload bytes (100kB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0026-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0026-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0026-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0026-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0026-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0026-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0026-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0026-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0026-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0026-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0026-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0026-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0026-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0026-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0026-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0026




START_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0027

//!@SYMTestCaseID		TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0027
//!@SYMAPI
//!                TInt RSocketServ::Connect (TUint aMessageSlots=KESockDefaultMessageSlots);
//!                void RHostResolver:: GetByName(const TDesC {ref}aName, TNameEntry {ref}aResult, TRequestStatus {ref}aStatus);
//!                void Rconnection :: Start(TConnPref {ref}aPref, TRequestStatus {ref}aStatus);
//!                void Rsocket :: Write(const TDesC8 {ref}aDesc, TRequestStatus {ref}aStatus);
//!@SYMAuthor			ddamian
//!@SYMCreationDate		9/5/2008 
//!@SYMTestCaseDesc		Connect to a PSD access point in WCDMA mode, upload bytes (3MB) to a server using HTTP protocol.
//!@SYMTestActions
//!                1.- OpenTelServer
//!                2.- OpenPhone (RTelServer = telServer1; Phone = 0)
//!                3.- InitCustomApi (RMobilePhone = rMobilePhone1)
//!                4.- ModeChange (ChangeMode = WCDMA)
//!                5.- GetCurrentSystemNetworkModes
//!                6.- ModeCheck (CheckMode = WCDMA)
//!                7.- OpenLine (Line = Data; RMobilePhone = rMobilePhone1)
//!                8.- ConnectToSocketServ
//!                9.- OpenRConnection (IAP = IAPGPRS; RSocketServ = rSocketServ1)
//!                10.- SelectOutgoingIAP (IAP = IAPGPRS)
//!                11.- StartRConnection (Retries = 1)
//!                12.- OpenHostResolver  (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                13.- GetByName (Address = {URL,address1})
//!                14.- CloseHostResolver
//!                15.- RSocketOpen (RConnection = rConnection1; RSocketServ = rSocketServ1)
//!                16.- RSocketConnect (Port = 80; Address = {URL,address1}; RHostResolver = rHostResolver1)
//!                17.- BuildRequest (Address = {URL,address1}; Bytes = 3145728; RequestLogFile = \logs\dt\request.txt)
//!                18.- RSocketWrite
//!                19.- SendBytesToSocket (Bytes = 3145728; Duration = -1)
//!                20.- EndRequest
//!                21.- RSocketWrite
//!                22.- ResponseFromServer (ResponseLogFile = \logs\dt\response.txt)
//!                23.- RSocketShutDown
//!                24.- RSocketClose
//!                25.- StopRConnection
//!                26.- CloseRConnection
//!                27.- CloseLine
//!                28.- CloseSocketServ
//!                29.- CloseCustomApi
//!                30.- ClosePhone
//!                31.- CloseTelServer
//!@SYMTestStatus		Verified
//!@SYMTestPriority		high
//!@SYMTestExpectedResults
//!                Connect to a PSD access point in WCDMA mode, upload bytes (3MB) to a server using HTTP protocol with no error.
//!@SYMTestType			CIT

	START_TEST_BLOCK	3600	t_esock_etelmm	\mixed_technology\telephony_comms\telephony_comms-validation-automated_upload.ini
		CREATE_OBJECT	RSocketServ		rSocketServ1
		CREATE_OBJECT	RSocket		rSocket1
		CREATE_OBJECT	RHostResolver		rHostResolver1
		CREATE_OBJECT	RConnection		rConnection1
		CREATE_OBJECT	DataVerify		dataVerify1
		CREATE_OBJECT	RMmCustomAPI		mmCustomAPI1
		CREATE_OBJECT	RTelServer		telServer1
		CREATE_OBJECT	RMobileLine		mobileLine1
		CREATE_OBJECT	RMobilePhone		rMobilePhone1
		COMMAND		telServer1		Connect
		COMMAND		rMobilePhone1		Open			TELEPHONY-Comms-Upload-0027-0001-Open_command02
		COMMAND		mmCustomAPI1		Open			TELEPHONY-Comms-Upload-0027-0001-Open_command03
		COMMAND		mmCustomAPI1		SetSystemNetworkMode			TELEPHONY-Comms-Upload-0027-0001-SetSystemNetworkMode_command04
		OUTSTANDING
		COMMAND		mmCustomAPI1		GetCurrentSystemNetworkModes
		OUTSTANDING
		COMMAND		mmCustomAPI1		ModeCheck			TELEPHONY-Comms-Upload-0027-0001-ModeCheck_command06
		COMMAND		mobileLine1		Open			TELEPHONY-Comms-Upload-0027-0001-Open_command07
		COMMAND		rSocketServ1		Connect
		COMMAND		rConnection1		Open			TELEPHONY-Comms-Upload-0027-0001-Open_command09
		COMMAND		rConnection1		SelectOutgoingIAP			TELEPHONY-Comms-Upload-0027-0001-SelectOutgoingIAP_command10
		COMMAND		rConnection1		Start			TELEPHONY-Comms-Upload-0027-0001-Start_command11
		COMMAND		rHostResolver1		Open			TELEPHONY-Comms-Upload-0027-0001-Open_command12
		COMMAND		rHostResolver1		GetByName			TELEPHONY-Comms-Upload-0027-0001-GetByName_command13
		OUTSTANDING
		COMMAND		rHostResolver1		Close
		COMMAND		rSocket1		Open			TELEPHONY-Comms-Upload-0027-0001-Open_command15
		COMMAND		rSocket1		Connect			TELEPHONY-Comms-Upload-0027-0001-Connect_command16
		OUTSTANDING
		COMMAND		rSocket1		BuildRequest			TELEPHONY-Comms-Upload-0027-0001-BuildRequest_command17
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		SendBytesToSocket			TELEPHONY-Comms-Upload-0027-0001-SendBytesToSocket_command19
		COMMAND		rSocket1		EndRequest
		COMMAND		rSocket1		Write
		OUTSTANDING
		COMMAND		rSocket1		ResponseFromServer			TELEPHONY-Comms-Upload-0027-0001-ResponseFromServer_command22
		COMMAND		rSocket1		ShutDown
		OUTSTANDING
		COMMAND		rSocket1		Close
		COMMAND		rConnection1		Stop
		COMMAND		rConnection1		Close
		COMMAND		mobileLine1		Close
		COMMAND		rSocketServ1		Close
		COMMAND		mmCustomAPI1		Close
		COMMAND		rMobilePhone1		Close
		COMMAND		telServer1		Close
	END_TEST_BLOCK
END_TESTCASE TELEPHONY_COMMS-VALIDATION-AUTOMATED_UPLOAD-0027


DELAY 10000
